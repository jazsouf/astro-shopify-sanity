---
import type { PortableTextProps } from "astro-portabletext/types";
import type { HOME_QUERYResult } from "../data/sanity/types.generated";
import RichText from "./RichText.astro";
import SanityImage from "./SanityImage.astro";

interface Props {
  pageBuilder: NonNullable<HOME_QUERYResult>["pageBuilder"];
}

const { pageBuilder } = Astro.props;
---

<style>
  .section {
    position: relative;
    aspect-ratio: 16/9;
    width: 100vw;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  @media (max-width: 768px) {
    .section {
      aspect-ratio: 1/1;
    }
  }

  .background {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
  }

  .background img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .content {
    position: relative;
    z-index: 1;
    max-width: 800px;
    padding: 2rem;
    text-align: center;
  }
</style>
{
  pageBuilder?.map((block, index) => {
    return (
      <section
        class="section"
        style={{ backgroundColor: `${block.cover[0]?.color ?? "#000"}` }}
      >
        {block.cover[0].backgroundImage?.asset && (
          <div class="background">
            <SanityImage
              node={block.cover[0].backgroundImage.asset}
              alt={block.cover[0].backgroundImage.alt}
              loading={index === 0 ? "eager" : "lazy"}
              aspectRatio="16-9"
              mobileAspectRatio="1-1"
            />
          </div>
        )}
        <div class="content">
          <RichText content={block?.content as PortableTextProps["value"]} />
        </div>
      </section>
    );
  })
}
